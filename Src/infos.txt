- XAMP : https://www.apachefriends.org/fr/index.html
- VSC : https://code.visualstudio.com/
- Web should only use objects and connection to database made only once per version declarate in static and with a public page where an administrator set credentials and initiate the connection, but nobody do that, they using arbitrary static declaration, but objects are like new dynamic variable each time you intentiate it, and static variable is fixed and shared even in an object, so it's possible to create an encrypted page with a password to acces it and send credentials for database connection to a app and a service using a administrator API script. Web devs backend don't know how to use static variables, while they use a file to write visitor number instead you can create a counter with a static variable, while they use class to make clean code instead you can create a json object in a class with ID of clients and their datas declared static, so the datas of the majority of dynamic web sites are mixed between clients, devs don't understand the side effect and the behaviour from all their lines of codes, everything must be rebuilt from zero. Only few devs know that it's possible to see a history of one file on git and to revert changes of commit of this one file, and that formating HTML files like all other type of documents is an optimization, ask them and you will see who is passionate or not, like setting variables to private and constant and function to private, it's also an optimization, because it uses less memory places, but also ask them the effect on optimization for a single line of code, because just getting a length of an array is a big unoptimization, but they will all say it's nothing. A database is expensive and consume a lot, a database is only usefull when an application need to peer data in real time between users, like for social network, or document sharing, or e-mail, or saling/buying products, otherwise it's totally useless to use a database, prefer use SQL lite or localstorage or files, like I did, it's not productive and privacy compilent when no data need to be share, otherwise it's possible to share data localy in a private network or with a file, I also did all of that. 
- Not many people know the difference between let and var for declaring variables in Javascript even if they learned it in school or they can see it with little codes, let is like static for variables. When they iterate through a collection, it's typed badly, but it's so simple, it's like spelling language. They made Youtube video and learn only in school, sometimes, never been in school, it's full of garbage courses on Youtube and with other developpers in any society. Sometimes bad profesors learn only the basic, never explaining the principle like static variables, or clean code or how to use git, even if it's the subject.
- I learned a lot always searching the best while coding, like a heavy client program is like a server, but contrary a web application running on a server must always be coded in oriented object because only one instance of the program is running on a server, you must instantiate objects for each functionnalites with everytimes classes, otherwise any same data is coalescent with other for any user, it's coalescent when variables are declared as static in class for example, even if you instantiate it as an object. Almost all programs in the world are coded with foots, even more if it's made by a lot of people, it embed libraries with big vulnerabilities and hacks, it's made with design patterns for just use design patterns with none of knowledge, the databases are full of tables full of columns, it's full of backends, and a frontend lagging as hell, for just 3 functionnalities with tons of useless lines, unbelievable and inapprehensible, sometimes with no commentaries, sometimes with functions containing 6000 lines of code, sometimes with projects linked to other projects, but in same folder for different solutions, and when you reference it, it's the hell, and everywhere in the world, it's the same bad guys believing to know coding and the effect of codes, but nothing in fact, and they all winning lot of money, some people struggle for weeks and weeks on the same problem, while when it takes 2 seconds of lucidity, and you can't touch their codes to clean a little, they are too lazzy to clean themselves their codes, thinking it's all good, even if 90% of lines are useless. 
- Why IT Companies are Looking but not Finding Talents?
Most of employers and employed are believing there are not so much talents, and all talents are already employed.
It's just employed that don't know coding in fact, and so it's too hard for a true talent to scum the same and in their codes, so it's scum.
Employed are so noobs that they don't want you return their codes for having good coding, because they are so scarry and unable to review, and do different (with the true feelings).
Employed are training themselves with design patterns thinking it's cool and usefull because they don't know to make simple, and they believe to learn for themselves like that.
When they doing their own frameworks, and methods, it's a rampage.
They are just good at stealing copyrighted contents and earning money with, but without found the creators asking founds clearly, and without making any advance, quid helping the creators.
By making nothing and bad, workers are able to deliver stuffs to employers for customers, and they not found what they use from indies even if indies are asking founds.
They making believe to have worked hard and sometimes alone and first on a subject, but they just have stolen indies.
They believe everything trigger circular reference error, they don't believe you can add triangular reference. They don't know circular reference is just between two projects, but it's so badly designed that you are seek to do it.
There are all kinds of saboters and sabotage, you lose your works like never before, they are too lazy to revert one file commit to help you a little, they revert all your commit.
The codes are over written, 10 times too much codes, 10 times too much pages, even more sometimes, for nothing more than flooded, no commentaries, no documentations, no contacts with the clients to see clearer, it's a joke.
When you are experimented and know coding well a program, there are one or two little features you never coded that appear, but saying that to others in a job will make you appear as a crazy guy, they will say you don't know what you doing, you are bad at coding, and everybody will joke at your face, but in fact, who criticize you is badly unexperimented.
When you want to push a commit for saving your works of the day, not a realease, you can't, because they want it all tested and completly working, and sometimes they don't want you repair an error, and push it in release... It's just because they all don't know to work together.
Only few experimented developers can know what mean: only use it if you need it.
